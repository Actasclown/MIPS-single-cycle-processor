00400020 / 20050001; 001000 00000 00101 0000000000000001 ADDI $5 $0 0x1 // $5 = 1
00400024 / 20060064; 001000 00000 00110 0000000001100100 ADDI $6 $0 0x64 // $6 = 100
00400028 / 20021000; 001000 00000 00010 0001000000000000 ADDI $2 $0 0x1000 // $2 = 0x1000
0040002c / 00421400; 000000 00010 00010 0001010000000000 SLL $2 $2 0x10 // $2 = 0x1000 << 16 = 0x10000000
00400030 / 20470028; 001000 00010 00111 0000000000101000 ADDI $7 $2 0x28 // $7 = 0x10000028
00400034 / 8c430000; 100011 00010 00011 0000000000000000 ** LW $3 0x0($2) // 
00400038 / 00c3202a; 000000_00110_00011_00100_00000101010 SLT $4 $6 $3 //  $4 = 0 because $6 = 100 > $3 = 10
0040003c / 10850002; 000100 00100 00101 0000000000000010 BEQ $4 $5 0x2 //  goto 0x2 (*) if $4 == $5  1=1 branch
00400040 / 00c33022; 000000_00110_00011_00110_00000_100010 SUB $6 $6 $3 // $6 = $6 - $3 = 100 -15 = 85
00400044 / ac400000; 101011_00010_00000_0000000000000000 SW $0 0x0($2) // data at 10000000 = 0 
00400048 / 20420004; 001000_00010_00010_0000000000000100 * ADDI $2 $2 0x4 // $2 += 4 
0040004c / 1447fff9; 000101_00010_00111_1111111111111001 BNE $2 $7 -7// goto the 6th line (**) counting back if $2 != $7 
00400050 / ace60000; 101011_00111_00110_0000000000000000 SW $6 0x0($7) // store $6 to MEM[$S7] At last $6 is 10; data at 10000024 is 10

00400020 / 20050001;
00400024 / 20060064; 
00400028 / 20021000; 
0040002c / 00421400; 
00400030 / 20470028; 
00400034 / 8c430000;
00400038 / 00c3202a; 
0040003c / 10850002;
00400040 / 00c33022; 
00400044 / ac400000;
00400048 / 20420004; 
0040004c / 1447fff9;
00400050 / ace60000;


10000000 / 0000000a;  $3 = 10 $6= 100 $6 = 90 data at 10000000 = 0 $2 = 10000004
10000004 / 00000009;  $3 = 9 $6 = 90 $6 = 81 data at 10000004 = 0 $2 = 10000008
10000008 / 00000008;  $3 = 8 $6 = 81 $6 = 73 data at 10000008 = 0 $2 = 1000000c
1000000c / 000002bc;  $6= 73 $3 = 700 $2 = 100000010
10000010 / 00000005;  $6= 73 $3 = 5 $6= 68 data at 100000010 = 0  $2 = 100000014
10000014 / 00000006;  $6= 68 $3 = 6 $6 = 62 data at 100000010 = 0  $2 = 100000018
10000018 / 00000190;  $6= 62 $3 = 400   $2 = 10000001c
1000001c / 00000001; $6= 62 $3 = 1 $6 = 61 data at 10000001c = 0  $2 = 100000020
10000020 / 00000002; $6= 62 $3 = 2 $6 = 59 data at 10000020 = 0  $2 = 100000024
10000024 / 00000003; $6= 59 $3 = 3 $6 = 56 data at 10000024 = 0  $2 = 100000028
                      data at 10000028 = 56


